base_path: '../../data/aclImdb/imdb'   # the base path for the data, model, results, etc.
ATTACKED_INDICES: '[   1,   10,   14,   16,   17,   20,   23,   34,   51,   71,   73, 76,   88,   89,   93,  103,  111,  117,  119,  121,  132,  140, 144,  146,  153,  154,  156,  163,  173,  183,  185,  191,  202, 213,  214,  223,  229,  231,  234,  235,  243,  247,  252,  258, 268,  278,  283,  292,  299,  305,  313,  319,  321,  339,  349,
                           353,  356,  360,  370,  376,  384,  393,  403,  404,  410,  411,
                           427,  431,  441,  466,  475,  485,  487,  488,  498,  505,  510,
                           512,  524,  527,  529,  539,  542,  547,  566,  578,  591,  594,
                           596,  610,  616,  618,  623,  624,  629,  630,  644,  645,  652,
                           658,  659,  672,  680,  683,  687,  693,  705,  710,  716,  721,
                           726,  729,  730,  734,  742,  755,  756,  761,  763,  764,  777,
                           790,  791,  803,  811,  813,  822,  827,  832,  835,  840,  845,
                           858,  873,  889,  891,  895,  898,  902,  907,  912,  925,  933,
                           934,  937,  938,  939,  940,  945,  954,  957,  968,  983,  990,
                           995,  996,  997, 1000, 1015, 1018, 1022, 1031, 1032, 1035, 1046,
                          1054, 1064, 1065, 1072, 1073, 1080, 1091, 1097, 1099, 1106, 1112,
                          1115, 1116, 1125, 1128, 1131, 1145, 1147, 1167, 1168, 1170, 1172,
                          1177, 1179, 1181, 1183, 1203, 1204, 1207, 1208, 1213, 1218, 1219,
                          1220, 1222, 1231, 1240, 1272, 1278, 1282, 1286, 1287, 1302, 1312,
                          1315, 1317, 1324, 1336, 1344, 1357, 1359, 1360, 1376, 1386, 1394,
                          1405, 1406, 1416, 1419, 1421, 1422, 1427, 1428, 1446, 1453, 1462,
                          1476, 1484, 1485, 1502, 1505, 1506, 1511, 1515, 1523, 1533, 1537,
                          1538, 1542, 1545, 1550, 1553, 1557, 1560, 1563]'  # '[0, 1, 3, 10,  13,  14,  16,  17,  20,  22,  23,  34,  35, 51,  59,  61,  68,  73,  76,  78,  83,  87,  88,  89,  93, 103, 111, 117, 119, 121, 125, 132, 155, 157, 159, 182,   8,  11,  25, 40,  70,  90,  92,  99, 104, 113, 142, 189, 198]'  # a string describing list of the indices of the dataset to attack, can be 'range(i,j)', or '[i, j, k, m, ...]'
ENV_TYPE: 'Synonym'  # Environment type - from ['Synonym', 'SynonymDelete', 'SynonymMisspell']
ATTACK_TYPE: 'individual'  # attack each text individually or by learning all text together - from ['universal', 'individual']
DEVICE: 'cuda'  # which device to use
AGENT_TYPE: 'dqn_contin'  # agent used to attack ['dqn', 'dqn_contin']
MODEL_TYPE: 'e2e'  # attacked model type: end-to-end transfer learning of BERT or text embedding transfer learning of BERT, or Word-LSTM ['e2e', 'transfer', 'lstm']
BATCH_SIZE: 128   # number of transitions to sample for training the agent at each step
NUM_EPISODES: 5  # number of episodes to "play" for each text if attacking individually, or altogether else
EARLY_STOPPING:   # the reward above which the attack stops, leave empty for no early_Stopping. when aiming for any attack, and not the best this speeds things up dramatically
MAX_SENT_LEN: 150  # the maximum sentence length, which influences the number of actions. ignored if attacking individually
TARGET_UPDATE: 5  # every how many agent episodes to update the target network
GAMMA: 0.995  # the decay parameter for the A3C loss
EPS_START: 1.0  # the initial epsilon for epsilon-greedy exploration
EPS_END: 1.0  # 0.05  # the minimal epsilon for epsilon-greedy exploration
EPS_DECAY: 75000  # the decay parameter for epsilon according to the equation: EPS_END + (EPS_START - EPS_END) * exp(-1. * steps_done / EPS_DECAY)
MAX_TURNS: 30  # max number of turns the agent gets
STATE_SHAPE: 768  # the size of the agent state representation
LEARNING_RATE: 0.00005  # the learning rate for the DQN agent
NORMALISE_ROUNDS: -1  # number of samples to see for state normalising parameters, -1 means no normalising, 'offline' means offline normalising (Which is not supported for individual attacks)
HANDLE_OUT: 'save'  # what to do with results from ['save', 'plot'], if to save to csv or plot and show reward graph. If something else the results aren't logged in any way
MEM_TYPE:  'priority'  # one of ['priority', 'regular'] if using 'priority' a priority replay buffer is used